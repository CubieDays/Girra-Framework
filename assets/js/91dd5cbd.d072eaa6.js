"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[741],{62210:e=>{e.exports=JSON.parse('{"functions":[{"name":"Start","desc":"Starts Girra on the Server-Side!\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nGirra.Start(0) {\\n\\tDebugging = {\\n\\t\\tInGameDebugging = { SignalDebugging = false }\\n\\t\\tInStudioDebugging = { SignalDebugging = true }\\n\\t}\\n}\\n\\n--\x3e 0 Means default GameLocation Location which is playerscripts\\n```","params":[{"name":"GameLocation","desc":"","lua_type":"Instance | number\\n"}],"returns":[{"desc":"","lua_type":"() -> (Settings)"}],"function_type":"static","yields":true,"source":{"line":718,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"OnStart","desc":"Returns an RBXScriptConnection.\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nGirra.OnStart(function()\\n\\tprint(\\"Started!\\")\\nend)\\n```\\nRuns when Girra Framework Starts on Server!\\n:::caution\\nThis function should be on top of .Start() function\\n:::","params":[{"name":"callback","desc":"","lua_type":"(...any) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":767,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"GetJob","desc":"Gets a Job From the Jobs Folder.\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nGirra.GetJob(\\"MyJob\\"):DoSomething()\\n```","params":[{"name":"Name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Job"}],"function_type":"static","source":{"line":782,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Begin","desc":"Another Way to Start Girra, It\'s recommended for Job intellisense.\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nGirra.Begin(0) {\\n\\tDebugging = {\\n\\t\\tInStudioDebugging = { NetworkDebugging = false, }\\n\\t}\\n}\\n```","params":[{"name":"JobsFolder","desc":"","lua_type":"Folder | number"}],"returns":[{"desc":"","lua_type":"(Settings: Settings) -> ()\\n"}],"function_type":"static","source":{"line":799,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"GetData","desc":"Returns Data Library","params":[],"returns":[{"desc":"","lua_type":"Data"}],"function_type":"static","source":{"line":834,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"CreateSignal","desc":"Creates a Signal that can be used to intract with Job to Job\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nlocal Job = {} --\x3e Example\\n\\nJob.Signal = Girra.CreateSignal()\\nJob.Signal:Fire(\\"Hello Other Job!\\")\\n```\\n:::note Debugging\\nCurrently Debugging will not work in Signal we will work on updates to make signal debugging\\n:::","params":[],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"static","source":{"line":855,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"CreateNetwork","desc":"Creates a network that communicate between Server-Job and Client-Job\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nlocal Network = Girra.CreateNetwork(\\"MyNetwork\\")\\nNetwork:Fire([Player], \\"Hello From Job To Job!\\")\\n```","params":[{"name":"Name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Network"}],"function_type":"static","source":{"line":869,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"CreateJob","desc":"Main Function used for .Start() and not .Begin().\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nlocal MyJob = Girra.CreateJob() {\\n\\tName = \\"MyJob\\"\\n}\\n```","params":[],"returns":[{"desc":"","lua_type":"(Job) -> ()"}],"function_type":"static","source":{"line":1000,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"CreateEmploy","desc":"Creates Employ\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\nlocal MyEmploy = Girra.CreateEmploy() ({\\n\\tName = \\"MyEmploy\\"\\n})\\n```","params":[],"returns":[{"desc":"","lua_type":"(Employ) -> ()"}],"function_type":"static","source":{"line":1018,"path":"lib/Resources/Secure/Server/Init.lua"}}],"properties":[{"name":"Services","desc":"Refrence to Used Game Services example:\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\nlocal Services = Girra.Services\\n\\n--\x3e InputBegan Function:\\nServices.UserInputService.InputBegan:Connect(function()\\n\\nend)\\n```","lua_type":"Services","readonly":true,"source":{"line":149,"path":"lib/Resources/Secure/Server/Init.lua"}}],"types":[{"name":"Debugging","desc":" \\nDebugging Settings","lua_type":"{InGameDebugging: {JobDebugging: boolean, SignalDebugging: boolean, NetworkDebugging: boolean}, InStudioDebugging: {JobDebugging: boolean, SignalDebugging: boolean, NetworkDebugging: boolean}}","source":{"line":38,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Settings","desc":":::note Used by Girra.Start()\\nThis Type Is used for Girra.Start() Function\\n:::\\n\\n\\t","lua_type":"{Debugging: Debugging}","source":{"line":48,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Job","desc":"Class Job of GirraServer Which Is Module.","fields":[{"name":"Name","lua_type":"string;","desc":""},{"name":"OnInit","lua_type":"() -> ()","desc":""},{"name":"OnStart","lua_type":"() -> ()","desc":""},{"name":"OnStep","lua_type":"(deltaTime: number) -> ()","desc":""},{"name":"Heartbeat","lua_type":"(deltaTime: number) -> ()","desc":""},{"name":"Fire","lua_type":"(Name: string) -> ()","desc":""},{"name":"Hire","lua_type":"(Name: string) -> HiredEmploy","desc":""},{"name":"Employes","lua_type":"{ [any]: { Work: () } }","desc":""}],"source":{"line":64,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"HiredEmploy","desc":"Class Employ of GirraServer Which Is Module.","fields":[{"name":"Job:","lua_type":"Job","desc":""},{"name":"Work","lua_type":"()","desc":""}],"source":{"line":73,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Employ","desc":"Class Employ of GirraServer Which Is Module.","fields":[{"name":"Name","lua_type":"string;","desc":""},{"name":"OnWork","lua_type":"(self: any)","desc":""},{"name":"OnHire","lua_type":"(self: any)","desc":""}],"source":{"line":83,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Network","desc":"Type Network of GirraServer Which IsA Network Object.","fields":[{"name":"Fire","lua_type":"(Player, any) -> ()","desc":""},{"name":"FireAll","lua_type":"(any: any) -> ()","desc":""},{"name":"Listen","lua_type":"(Player: Player, any) -> ()","desc":""},{"name":"Connect","lua_type":"(Player: Player, any) -> ()","desc":""},{"name":"Once","lua_type":"(Player: Player, any) -> ()","desc":""},{"name":"Invoke","lua_type":"(timeout: number, Player: Player, any) -> ()","desc":""},{"name":"InvokeAll","lua_type":"(timeout: number, any) -> ()","desc":""},{"name":"InvokeExcept","lua_type":"(Players: {Player: Player}, timeout: number, any) -> ()","desc":""},{"name":"FireExcept","lua_type":"(Players: {Player: Player}, any) -> ()","desc":""},{"name":"IsListening","lua_type":"() -> boolean,","desc":""},{"name":"Connected:","lua_type":"boolean","desc":""},{"name":"Disconnect","lua_type":"() -> ()","desc":""},{"name":"Destroy","lua_type":"() -> ()","desc":""}],"source":{"line":103,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Signal","desc":"Type Signal of GirraServer Which IsA Signal Object: Signal.new().","fields":[{"name":"IsActive","lua_type":"() -> boolean,","desc":""},{"name":"Connect","lua_type":"(Callback: (...any) -> ()) -> RBXScriptConnection,","desc":""},{"name":"Listen","lua_type":"(Callback: (...any) -> ()) -> RBXScriptConnection,","desc":""},{"name":"Once","lua_type":"(Callback: (...any) -> ()) -> RBXScriptConnection,","desc":""},{"name":"Wait","lua_type":"() -> (...any),","desc":""},{"name":"Fire","lua_type":"(...any) -> (),","desc":""},{"name":"DisconnectAll","lua_type":"() -> (),","desc":""},{"name":"Destroy","lua_type":"() -> (),","desc":""},{"name":"Disconnect","lua_type":"() -> ()","desc":""}],"source":{"line":119,"path":"lib/Resources/Secure/Server/Init.lua"}},{"name":"Services","desc":"Type Services of GirraServer Which IsA Table Contains Game-Services.","fields":[{"name":"Players","lua_type":"Players","desc":""},{"name":"UserInputService","lua_type":"UserInputService","desc":""},{"name":"RunService","lua_type":"RunService","desc":""},{"name":"ReplicatedStorage","lua_type":"ReplicatedStorage","desc":""},{"name":"Workspace","lua_type":"Workspace","desc":""}],"source":{"line":131,"path":"lib/Resources/Secure/Server/Init.lua"}}],"name":"GirraServer","desc":"The Server-Side Of Girra Let\'s you Create Server Networks and Signals and Jobs.\\n\\nGetting Girra Server:\\n```lua\\nlocal Girra = require(game.ReplicatedStorage.Girra):GetServer()\\n\\n--\x3e Starting Girra:\\nGirra.Start(0) {\\n\\tDebugging = {\\n\\t\\tInGameDebugging = {\\n\\t\\t\\tJobDebugging = false,\\n\\t\\t\\tNetworkDebugging = false,\\n\\t\\t\\tSignalDebugging = false\\n\\t\\t};\\t\\n\\t\\tInStudioDebugging = {\\n\\t\\t\\tJobDebugging = true,\\n\\t\\t\\tNetworkDebugging = true,\\n\\t\\t\\tSignalDebugging = true,\\n\\t\\t}\\n\\t}\\n}\\n\\n--\x3e 0 Means The Default Jobs Folder Location: game.ServerScriptService.Jobs\\n```","realm":["Server"],"source":{"line":31,"path":"lib/Resources/Secure/Server/Init.lua"}}')}}]);