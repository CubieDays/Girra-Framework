"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[260],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>p});var r=t(67294);function g(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){g(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,g=function(e,n){if(null==e)return{};var t,r,g={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(g[t]=e[t]);return g}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(g[t]=e[t])}return g}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,g=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=l(t),d=g,p=c["".concat(u,".").concat(d)]||c[d]||b[d]||i;return t?r.createElement(p,a(a({ref:n},s),{},{components:t})):r.createElement(p,a({ref:n},s))}));function p(e,n){var t=arguments,g=n&&n.mdxType;if("string"==typeof e||g){var i=t.length,a=new Array(i);a[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:g,a[1]=o;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},63957:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>b,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=t(87462),g=(t(67294),t(3905));const i={},a="Debugger",o={unversionedId:"Debugging",id:"Debugging",title:"Debugger",description:"Debugging in the Girra framework is very easy and effective. Debugging makes you monitor your game and see errors, logs and warnings. You can either delete a log or delete all logs and send a log or warning. You can also see all logs in a table.",source:"@site/docs/Debugging.md",sourceDirName:".",slug:"/Debugging",permalink:"/Girra-Framework/docs/Debugging",draft:!1,editUrl:"https://github.com/CubieDays/Girra-Framework/edit/main/docs/Debugging.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/Girra-Framework/docs/Installation"},next:{title:"Getting Started",permalink:"/Girra-Framework/docs/Getting Started"}},u={},l=[{value:"Customization",id:"customization",level:2},{value:"Debugging",id:"debugging",level:2}],s={toc:l},c="wrapper";function b(e){let{components:n,...t}=e;return(0,g.kt)(c,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,g.kt)("h1",{id:"debugger"},"Debugger"),(0,g.kt)("p",null,"Debugging in the Girra framework is very easy and effective. Debugging makes you monitor your game and see errors, logs and warnings. You can either delete a log or delete all logs and send a log or warning. You can also see all logs in a table."),(0,g.kt)("h2",{id:"customization"},"Customization"),(0,g.kt)("p",null,"When Starting Girra it gives you an options to start it most of them related to Debugging and they are:"),(0,g.kt)("p",null,"JobDebugging: Runs when a job initallized and required\nSignalDebugging: Runs when a signal is created or when a signal is fired or when a signal disconnected\nNetworkDebugging: Same as SignalDebugging but for Network\nOutputDebugging: Things that Developer Debugs and used the girra's framework Debugger"),(0,g.kt)("p",null,"Debugging has cut to two the first one is InGameDebugging and the second is InStudioDebugging\nInGameDebugging Debugs things inside real-time game while InStudioDebugging Debug things inside studio."),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-lua"},"Girra.Start(ServerScriptService) ({\n    Debugging = {\n        InGameDebugging = {\n            SignalDebugging = true,\n            NetworkDebugging = true,\n            JobDebugging = false,\n            OutputDebugging = false,\n        }\n        InStudioDebugging = {\n            SignalDebugging = true,\n            NetworkDebugging = true,\n            JobDebugging = true,\n            OutputDebugging = true,\n        }\n    }\n})\n")),(0,g.kt)("h2",{id:"debugging"},"Debugging"),(0,g.kt)("p",null,"Debugging is very simple use the Debugger.Debug() function and that will debug make sure to enable debugging via OutputDebugging Configuration."),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-lua"},'local Debugger = Girra.Libs.Debugger\nDebugger.Debug(warn, "Log", "An error occurred")\n')))}b.isMDXComponent=!0}}]);