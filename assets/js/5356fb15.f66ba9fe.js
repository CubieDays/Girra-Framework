"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[260],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>p});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function g(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?g(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},g=Object.keys(e);for(t=0;t<g.length;t++)r=g[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var g=Object.getOwnPropertySymbols(e);for(t=0;t<g.length;t++)r=g[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),l=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(u.Provider,{value:n},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,g=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=l(r),d=i,p=c["".concat(u,".").concat(d)]||c[d]||b[d]||g;return r?t.createElement(p,a(a({ref:n},s),{},{components:r})):t.createElement(p,a({ref:n},s))}));function p(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var g=r.length,a=new Array(g);a[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:i,a[1]=o;for(var l=2;l<g;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},63957:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>b,frontMatter:()=>g,metadata:()=>o,toc:()=>l});var t=r(87462),i=(r(67294),r(3905));const g={sidebar_position:6},a="Debugger",o={unversionedId:"Debugging",id:"Debugging",title:"Debugger",description:"Debugging in the Girra framework is very easy and effective. Debugging makes you monitor your game and see errors, logs and warnings. You can either delete a log or delete all logs and send a log or warning. You can also see all logs in a table.",source:"@site/docs/Debugging.md",sourceDirName:".",slug:"/Debugging",permalink:"/Girra-Framework/docs/Debugging",draft:!1,editUrl:"https://github.com/CubieDays/Girra-Framework/edit/main/docs/Debugging.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Networking",permalink:"/Girra-Framework/docs/Networking"}},u={},l=[{value:"Customization",id:"customization",level:2},{value:"Debugging",id:"debugging",level:2}],s={toc:l},c="wrapper";function b(e){let{components:n,...r}=e;return(0,i.kt)(c,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"debugger"},"Debugger"),(0,i.kt)("p",null,"Debugging in the Girra framework is very easy and effective. Debugging makes you monitor your game and see errors, logs and warnings. You can either delete a log or delete all logs and send a log or warning. You can also see all logs in a table."),(0,i.kt)("h2",{id:"customization"},"Customization"),(0,i.kt)("p",null,"When Starting Girra it gives you an options to start it most of them related to Debugging and they are:"),(0,i.kt)("p",null,"JobDebugging: Runs when a job initallized and required\nSignalDebugging: Runs when a signal is created or when a signal is fired or when a signal disconnected\nNetworkDebugging: Same as SignalDebugging but for Network\nOutputDebugging: Things that Developer Debugs and used the girra's framework Debugger"),(0,i.kt)("p",null,"Debugging has cut to two the first one is InGameDebugging and the second is InStudioDebugging\nInGameDebugging Debugs things inside real-time game while InStudioDebugging Debug things inside studio."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"Girra.Start(ServerScriptService) ({\n    Debugging = {\n        InGameDebugging = {\n            SignalDebugging = true,\n            NetworkDebugging = true,\n            JobDebugging = false,\n            OutputDebugging = false,\n        }\n        InStudioDebugging = {\n            SignalDebugging = true,\n            NetworkDebugging = true,\n            JobDebugging = true,\n            OutputDebugging = true,\n        }\n    }\n})\n")),(0,i.kt)("h2",{id:"debugging"},"Debugging"),(0,i.kt)("p",null,"Debugging is very simple use the Debugger.Debug() function and that will debug make sure to enable debugging via OutputDebugging Configuration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local Debugger = Girra.Libs.Debugger\nDebugger.Debug(warn, "Log", "An error occurred")\n')))}b.isMDXComponent=!0}}]);