"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[373],{6254:e=>{e.exports=JSON.parse('{"functions":[{"name":"Fire","desc":"Fires the network class","params":[{"name":"Content","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":32,"path":"lib/Network/Client.luau"}},{"name":"Listen","desc":"Listens to a callback","params":[{"name":"Callback","desc":"","lua_type":"(Content: any)"}],"returns":[],"function_type":"method","source":{"line":60,"path":"lib/Network/Client.luau"}},{"name":"Once","desc":"Listens once to the callback","params":[{"name":"Callback","desc":"","lua_type":"(Content: any)"}],"returns":[],"function_type":"method","source":{"line":68,"path":"lib/Network/Client.luau"}},{"name":"Invoke","desc":"Invokes to a OnServerInvoke function\\n:::tip\\nTo make a serverinvoke funciton do:\\nServerIndex.OnServerInvoke = function(content) end)\\n:::","params":[{"name":"Content","desc":"","lua_type":"Content: any"}],"returns":[],"function_type":"method","source":{"line":80,"path":"lib/Network/Client.luau"}},{"name":"Wait","desc":"Waits for the next fire","params":[],"returns":[],"function_type":"method","source":{"line":95,"path":"lib/Network/Client.luau"}}],"properties":[],"types":[],"name":"Client","desc":"The Network Client Index for NetworkClass\\n\\nGetting Network Client Class\\n```lua\\nNetwork.Client(\\"NetworkClass\\")\\n```","realm":["Client"],"source":{"line":13,"path":"lib/Network/Client.luau"}}')}}]);